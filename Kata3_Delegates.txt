Kata3_Delegates

Bygger vidare på Kata2 och övar delegates.
Passa också på att öva Git; t ex, git commit, git squash, git revert, git reset, git branch, git checkout, 
git push, git fetch, git pull, git merge, git cherrypick, git ammend

1. Skapa ett ny projekt som heter "Kata3_Delegates". Kopiera koden från Kata2, kompilera och kör så att du har en stadig startpunkt.
2. Ändra namespace i alla filer i projektet "Kata2a_Delegates" till "Kata2a_Delegates". Kompilera och kör.
3. Skapa en ny Git repository lokalt och på Github
4. Skapa en Git Branch som du kallar IEnumerable. Gör git checkout till den nyskapade Branchen

Nu har du en körbar startpunkt på i dina båda brancher.
----------------------------------------------------------------------------
5. Vi vill nu möjligöra för en delegate att köra och göra någonting efter varje nyskapad member i MemberList.
   - I MemberList.CreateWithRandomData() lägg till en parameter, newMemberAction av en delegate typ Action<IMember>
   - Efter varje nyskapad member, efter att den är inlagd i listan, kör NewMemberAction() med den nyskapade members som
     parameter

6. Nu är du redo att besluta vad som ska göras efter varje nyskapad medlem. Detta görs genom att du skapar ett par 
   Delegate metoder i Program som du kan skicka in i CreateWithRandomData(..). Därmed är det här du beslutar vad som ska göras, 
   inte i MemberList. Typiskt användande av delegates
   - Skapa en statisk metod, RadissonGreetings(..), som skriver ut ett välkomsmeddelande till en ny Radisson medlem.
     Tänk på vilken signatur RadissonGreetings måste ha (dvs Action<IMember>)
   - Skicka med RadissonGreetings som parameter i anropet CreateWithRandomData
   - Skapa en ny statisk metod, HiltonGreetings(..), och upprepa samma förfarande för att skriva ut ett välkomstmeddelande till
     HiltonMembers


